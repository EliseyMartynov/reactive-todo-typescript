{"version":3,"sources":["styles/Input.module.css","styles/Header.module.css","styles/Todos.module.css","features/todosSlice.ts","store.ts","components/Header.tsx","components/Input.tsx","components/SingleTodo.tsx","components/Todos.tsx","App.tsx","index.tsx","styles/SingleTodo.module.css"],"names":["module","exports","todosSlice","createSlice","name","initialState","reducers","addTodo","state","action","payload","id","text","push","completed","localStorage","setItem","JSON","stringify","completeTodo","x","find","item","editTodo","deleteTodo","filter","reorderTodo","before","after","beforeEl","actions","todos","parse","getItem","store","configureStore","reducer","todosSliceReducer","preloadedState","Header","className","styles","header","Input","dispatch","useDispatch","useState","txt","setTxt","addTodoHandler","e","preventDefault","match","newTodo","uuid","box","onSubmit","onKeyUp","failStyle","inputFailed","todoInput","document","querySelector","classList","contains","remove","add","validationHandler","onChange","target","value","modelInput","input","type","onClick","btn","SingleTodo","index","localInput","setLocalInput","edit","setEdit","completedHandler","editHandler","acceptEditsHandler","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","checkbox","checked","inputBox","outline","keyCode","modelHandler","delete","Todos","useSelector","droppableId","droppableProps","map","i","placeholder","App","onDragEnd","result","destination","source","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.16a04780.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Input_box__2OZkg\",\"input\":\"Input_input__2MHt-\",\"inputFailed\":\"Input_inputFailed__8Q5GP\",\"btn\":\"Input_btn__3AFNs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2k2C7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Todos_box__z_t3l\"};","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport {\n  AddAction,\n  CompleteAction,\n  EditAction,\n  DeleteAction,\n  ReorderAction\n} from \"./todosActionTypes\";\nimport { SingleTodoType } from \"../components/Todos\";\n\nconst todosSlice = createSlice({\n  name: \"todos\",\n  initialState: [],\n  reducers: {\n    addTodo(state, action: PayloadAction<AddAction>) {\n      const { id, text } = action.payload;\n      state.push({ id, text, completed: false });\n      localStorage.setItem(\"todos\", JSON.stringify(state));\n    },\n    completeTodo(state, action: PayloadAction<CompleteAction>) {\n      const { id } = action.payload;\n      const x = state.find((item: SingleTodoType) => item.id === id);\n      x.completed = !x.completed;\n      localStorage.setItem(\"todos\", JSON.stringify(state));\n    },\n    editTodo(state, action: PayloadAction<EditAction>) {\n      const { id, text } = action.payload;\n      const x = state.find((item: SingleTodoType) => item.id === id);\n      x.text = text;\n      localStorage.setItem(\"todos\", JSON.stringify(state));\n    },\n    deleteTodo(state, action: PayloadAction<DeleteAction>) {\n      const { id } = action.payload;\n      state = state.filter((item: SingleTodoType) => item.id !== id);\n      localStorage.setItem(\"todos\", JSON.stringify(state));\n      return state;\n    },\n    reorderTodo(state, action: PayloadAction<ReorderAction>) {\n      const { before, after } = action.payload;\n      const beforeEl = state[before];\n      state[before] = state[after];\n      state[after] = beforeEl;\n      localStorage.setItem(\"todos\", JSON.stringify(state));\n      return state;\n    }\n  }\n});\n\nexport const {\n  addTodo,\n  completeTodo,\n  editTodo,\n  deleteTodo,\n  reorderTodo\n} = todosSlice.actions;\n\nexport default todosSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { useDispatch } from \"react-redux\";\nimport todosSliceReducer from \"./features/todosSlice\";\nimport { SingleTodoType } from './components/Todos';\n\nconst todos: Array<SingleTodoType>   = JSON.parse(localStorage.getItem(\"todos\"));\n\nconst store = configureStore({\n  reducer: {\n    todos: todosSliceReducer\n  },\n  preloadedState: {\n    todos: todos ? todos : []\n  }\n});\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n","import React from 'react'\nimport styles from '../styles/Header.module.css'\n\nconst Header = () => {\n  return (\n    <>\n      <h1 className={styles.header}>Reactive TODO</h1>\n    </>\n  )\n}\n\nexport default Header\n","import React, { useState, BaseSyntheticEvent } from \"react\";\nimport styles from \"../styles/Input.module.css\";\nimport { v4 as uuid } from \"uuid\";\nimport { useDispatch } from \"react-redux\";\nimport { addTodo } from \"../features/todosSlice\";\n\nconst Input = () => {\n  const dispatch = useDispatch();\n\n  const [txt, setTxt] = useState(\"\");\n\n  const modelInput = (e: BaseSyntheticEvent) => {\n    setTxt(e.target.value);\n  };\n  \n  const validationHandler = () => {\n    const failStyle = `${styles.inputFailed}`;\n    const todoInput = document.querySelector(\"#todo-input\");\n    if (txt.match(/^\\s+$/ig) !== null || !txt) {\n      todoInput.classList.add(failStyle);\n    } else {\n      if (todoInput.classList.contains(failStyle)) {\n        todoInput.classList.remove(failStyle);\n      }\n    }\n  };\n\n  const addTodoHandler = (e: BaseSyntheticEvent) => {\n    e.preventDefault();\n    if (!(txt.match(/^\\s+$/ig) !== null || !txt)) {\n      const newTodo = {\n        id: uuid(),\n        text: txt\n      };\n      dispatch(addTodo(newTodo));\n      setTxt(\"\");\n    }\n  };\n\n  return (\n    <div className={styles.box}>\n      <form onSubmit={e => addTodoHandler(e)}>\n        <input\n          id=\"todo-input\"\n          onKeyUp={() => validationHandler()}\n          onChange={e => modelInput(e)}\n          value={txt}\n          className={styles.input}\n          type=\"text\"\n        />\n        <button onClick={e => addTodoHandler(e)} className={styles.btn}>\n          Todo!\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useState, BaseSyntheticEvent } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styles from \"../styles/SingleTodo.module.css\";\nimport { completeTodo, editTodo, deleteTodo } from \"../features/todosSlice\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\ntype SingleTodoProps = {\n  id?: string;\n  text?: string;\n  completed?: boolean;\n  index?: number;\n};\n\nconst SingleTodo = ({ id, text, completed, index }: SingleTodoProps) => {\n  const [localInput, setLocalInput] = useState(text);\n  const [edit, setEdit] = useState(false);\n\n  const modelHandler = (e: BaseSyntheticEvent) => {\n    setLocalInput(e.target.value);\n  };\n\n  const dispatch = useDispatch();\n\n  const completedHandler = () => {\n    dispatch(completeTodo({ id }));\n  };\n\n  const editHandler = () => {\n    setEdit(!edit);\n  };\n\n  const acceptEditsHandler = () => {\n    dispatch(editTodo({ id, text: localInput }));\n    setEdit(!edit);\n  };\n\n  const deleteHandler = () => {\n    dispatch(deleteTodo({ id }));\n  };\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {provided => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          className={styles.box}\n        >\n          <input\n            className={styles.checkbox}\n            type=\"checkbox\"\n            onChange={() => completedHandler()}\n            checked={completed}\n          />\n          {/*show close when editing and input*/}\n          {!edit ? (\n            <span\n              onClick={() => completedHandler()}\n              className={`${styles.text} ${completed ? styles.outline : \"\"}`}\n            >\n              {text}\n            </span>\n          ) : (\n            <div className={styles.inputBox}>\n              <input\n                className={`${styles.text} ${completed ? styles.outline : \"\"}`}\n                onKeyUp={e => {\n                  if (e.keyCode === 27) {\n                    editHandler();\n                  } else if (e.keyCode === 13) {\n                    acceptEditsHandler();\n                  }\n                }}\n                onChange={e => modelHandler(e)}\n                value={localInput}\n              />\n              <i\n                onClick={() => editHandler()}\n                className=\"far fa-window-close\"\n              ></i>\n            </div>\n          )}\n          {/*show accept when editing*/}\n          {!edit ? (\n            <span onClick={() => editHandler()} className={styles.edit}>\n              <i className=\"fas fa-pen-square\"></i>\n            </span>\n          ) : (\n            <span onClick={() => acceptEditsHandler()} className={styles.edit}>\n              <i className=\"far fa-check-square\"></i>\n            </span>\n          )}\n          {/*delete button*/}\n          <span onClick={() => deleteHandler()} className={styles.delete}>\n            <i className=\"far fa-minus-square\"></i>\n          </span>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nexport default SingleTodo;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styles from \"../styles/Todos.module.css\";\nimport SingleTodo from \"./SingleTodo\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { RootState } from \"../store\";\n\nexport type SingleTodoType = {\n  id: string;\n  text?: string;\n  completed: boolean;\n};\n\nconst Todos = () => {\n  const todosFromRedux = (state: RootState) => state.todos;\n\n  const todos = useSelector(todosFromRedux);\n\n  return (\n    <Droppable droppableId={\"todos-droppable\"}>\n      {provided => (\n        <div\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n          className={styles.box}\n        >\n          {todos.map((item: SingleTodoType, i: number) => (\n            <SingleTodo\n              index={i}\n              key={item.id}\n              id={item.id}\n              text={item.text}\n              completed={item.completed}\n            />\n          ))}\n          {provided.placeholder}\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nexport default Todos;\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { useAppDispatch } from \"./store\";\r\nimport Header from \"./components/Header\";\r\nimport Input from \"./components/Input\";\r\nimport Todos from \"./components/Todos\";\r\nimport {\r\n  DragDropContext,\r\n  DropResult\r\n} from \"react-beautiful-dnd\";\r\nimport { reorderTodo } from \"./features/todosSlice\";\r\n\r\nconst App = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onDragEnd = (result: DropResult): void => {\r\n    const { destination, source } = result;\r\n    const payload = {\r\n      before: source.index,\r\n      after: destination.index\r\n    };\r\n    dispatch(reorderTodo(payload));\r\n  };\r\n  \r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <Header />\r\n      <Input />\r\n      <Todos />\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\nimport App from './App';\r\nimport store from './store';\nimport { Provider } from 'react-redux';\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"SingleTodo_box__1hnGK\",\"checkbox\":\"SingleTodo_checkbox__11rrO\",\"inputBox\":\"SingleTodo_inputBox__3baDJ\",\"text\":\"SingleTodo_text__1eMkt\",\"outline\":\"SingleTodo_outline__3AYwG\",\"edit\":\"SingleTodo_edit__3jezp\",\"delete\":\"SingleTodo_delete__3aa3R\"};"],"sourceRoot":""}